[versions]
#  ./gradlew.bat wrapper --gradle-version 9.1.0 gradle 업데이트 방법
# 개발은 최신 버전으로 하고 배포시 버전은 따로 파일을 만들어서 관리.
lombok = "latest.release"

gson = "latest.release"
json = "latest.release"
fastjson2 = "latest.release"

# 1.8(jdk 8)에서는 1.2.13 으로 설정할 것
logbackClassic = "latest.release"
logbackCore = "latest.release"

# 1.8(jdk 8)에서는 2.7.18 으로 설정할 것
springBootStarterWeb = "latest.release"
springBootStarterWebSocket = "latest.release"
okhttp = "latest.release"

# 마지막 체크버전 'io.lettuce:lettuce-core:6.8.1.RELEASE'
lettuceCore = "latest.release"

# 마지막 체크버전 2.2
snakeyaml = "latest.release"

jakartaMail = "latest.release"

hikariCP = "latest.release"
postgresql = "latest.release"
mariadbJavaClient = "latest.release"
ojdbc8 = "latest.release"
ojdbc11 = "latest.release"
mssql = "latest.release"

jacksonDatabind = "latest.release"
jacksonDataformatCsv = "latest.release"

guava = "latest.release"

# 최신버전이 2.1.0-alpha1 이라 버전 명시
slf4jApi = "2.0.17"

commonsText = "latest.release"
commonsLang3 = "latest.release"
commonsCodec = "latest.release"


selenium = "latest.release"
webdrivermanager = "latest.release"

[libraries]
# 위에서 정의한 버전을 연결(version.ref)합니다.

lombok =  { module = "org.projectlombok:lombok", version.ref = "lombok" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
json = { module = "org.json:json", version.ref = "json" }
fastjson2 = { module = "com.alibaba.fastjson2:fastjson2", version.ref = "fastjson2" }

logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }
logbackCore = { module = "ch.qos.logback:logback-core", version.ref = "logbackCore" }
slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4jApi" }

springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBootStarterWeb" }
springBootStarterWebSocket = { module = "org.springframework.boot:spring-boot-starter-websocket", version.ref = "springBootStarterWebSocket" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

lettuceCore = { module = "io.lettuce:lettuce-core", version.ref = "lettuceCore" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
jakartaMail = { module = "com.sun.mail:jakarta.mail", version.ref = "jakartaMail" }

hikariCP = { module = "com.zaxxer:HikariCP", version.ref = "hikariCP" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
mariadbJavaClient = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mariadbJavaClient" }
ojdbc8 = { module = "com.oracle.database.jdbc:ojdbc8", version.ref = "ojdbc8" }
ojdbc11 = { module = "com.oracle.database.jdbc:ojdbc11", version.ref = "ojdbc11" }
mssql = { module = "com.microsoft.sqlserver:mssql-jdbc", version.ref = "mssql" }

jacksonDatabind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jacksonDatabind" }
jacksonDataformatCsv = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-csv", version.ref = "jacksonDataformatCsv" }

selenium = { module = "org.seleniumhq.selenium:selenium-java", version.ref = "selenium" }
webdrivermanager = { module = "io.github.bonigarcia:webdrivermanager", version.ref = "webdrivermanager" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }

commonsText = { module = "org.apache.commons:commons-text", version.ref = "commonsText" }
commonsLang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3" }
commonsCodec = { module = "commons-codec:commons-codec", version.ref = "commonsLang3" }
